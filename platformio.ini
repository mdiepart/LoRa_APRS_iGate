[platformio]
default_envs = lora_board

[env]
platform = espressif32 @ 6.0.1
framework = arduino
lib_ldf_mode = deep+
monitor_speed = 115200
monitor_raw = yes
lib_deps = 
	bblanchon/ArduinoJson @ 6.20.1
	lewisxhe/AXP202X_Library @ 1.1.3
	peterus/APRS-Decoder-Lib @ 0.0.6
	peterus/ESP-FTP-Server-Lib @ 0.11.0
	knolleary/PubSubClient@^2.8
	mikalhart/TinyGPSPlus @ 1.0.3
	shaggydog/OneButton @ 1.5.0
	jgromes/RadioLib @ 5.6.0
check_tool = cppcheck
check_flags =
	cppcheck: --suppress=*:*.pio\* --inline-suppr -DCPPCHECK --force lib -ilib/TimeLib -ilib/LoRa -ilib/NTPClient
check_skip_packages = yes
board_build.partitions = partitions.csv

# See ssl/enable_HTTPS.md for instructions on how to enable HTTPS server
board_build.embed_txtfiles =
	recovery/wifi_credentials
#	ssl/prvtkey.pem				# Uncomment this line to enable HTTPS server
# 	ssl/servercert.pem			# Uncomment this line to enable HTTPS server
#build_flags = -DENABLE_HTTPS=1  # Uncomment this line to enable HTTPS server

[env:lora_board]
board = esp32doit-devkit-v1
build_flags = ${env.build_flags} -Werror -Wall

[env:lora_board_debug]
board = esp32doit-devkit-v1
build_flags = ${env.build_flags} -Werror -Wall -DCORE_DEBUG_LEVEL=5
build_type = debug
monitor_filters = esp32_exception_decoder

#[env:lora_board_ota]
#board = esp32doit-devkit-v1
#build_flags = ${env.build_flags} -Werror -Wall
#upload_protocol = espota
#upload_port = DEVICE_IP_OR_URL
#upload_flags = 
#	--port=3232
#	--auth=password	# Password used for OTA update protocol (OTA/password in json file). Keep commented if no password is set

